<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poozim.jobcall.mapper.WorkMapper">
	
	<sql id="selectBoard">
		<if test="work_seq != null and work_seq != ''"> AND b.work_seq = #{work_seq}</if>
		<if test="group_seq != null and group_seq != ''"> AND b.group_seq = #{group_seq}</if>
		<if test="seq != null and seq != ''"> AND b.seq = #{seq}</if>
		<if test="type != null and type != ''"> AND b.type = #{type}</if>
		<if test="startdate != null and startdate != ''"> AND b.startdate &gt;= #{startdate}</if>
		<if test="enddate != null and enddate != ''"> AND b.enddate &lt;= #{enddate}</if>
		<if test="worker != null and worker != ''"> AND b.worker LIKE CONCAT('%', #{worker}, '%')</if>
		<if test="status != null and status != ''"> AND b.status = #{status}</if>
		<if test="register != null and register != ''"> AND b.register = #{register}</if>
		<if test='search != null and search != ""'> 
			AND (b.member_id = #{search} OR 
				b.member_name = #{search} OR 
				b.title LIKE CONCAT('%', #{search}, '%') OR
				<!-- b.content LIKE CONCAT('%', #{search}, '%') -->
				<![CDATA[
				REPLACE(REPLACE(b.content, '&lt;span class="mention" contenteditable="false"&gt;', ''), '&lt;/span&gt;', '') LIKE CONCAT('%', ]]>#{search}<![CDATA[, '%')
				]]>
				)
		</if>
	</sql>

	<sql id="selectActionLog">
		<if test="action != null and action != ''">AND action = #{action}</if>
		<if test="target != null and target != ''">AND target = #{target}</if>
		<if test="target_seq != null and target_seq != ''">AND target_seq = #{target_seq}</if>
		<if test="member_seq != null and member_seq != ''">AND member_seq = #{member_seq}</if>
	</sql>

	<select id="getWorkGroupList" parameterType="WorkGroup" resultType="WorkGroup">
		SELECT wg.*, 
		(SELECT category_seq FROM WorkCategoryGroup wcg WHERE wcg.group_seq = wg.seq) as category_seq,
		(SELECT COUNT(*) FROM WorkGroupMember wgm WHERE wgm.group_seq = wg.seq) as member_count
		<if test="member_seq != null and member_seq != ''">
			,(SELECT IF(wgm.seq &gt; 0, 'Y', 'N') FROM WorkGroupMember wgm WHERE wgm.group_seq = wg.seq AND wgm.member_seq = #{member_seq}) as attendyn
		</if>
		FROM WorkGroup wg
		WHERE wg.useyn = 'Y'
		AND wg.work_seq = #{work_seq}
		AND 
		(	
			wg.access like 'public'
			OR	
			(wg.access like 'private' AND wg.seq IN (SELECT group_seq FROM WorkGroupMember WHERE member_seq = #{member_seq}))
		)
		<if test="search != null and null != ''">
			AND (
				wg.name LIKE CONCAT('%', #{search} ,'%') OR
				wg.content LIKE CONCAT('%', #{search} ,'%')
			)
		</if>
	</select>
	
	<select id="getWorkBoardList" parameterType="WorkBoard" resultMap="workBoardMap">
		SELECT *, 'board' as target, 'like' as `like`, 'dislike' as dislike, #{member_seq} as search_member_seq, #{comment_limit} as comment_limit,
		(SELECT c.seq FROM Comment c WHERE c.board_seq = b.seq ORDER BY c.seq ASC LIMIT 1) as first_comment_seq,
		(SELECT action FROM ActionLog al WHERE al.member_seq = #{member_seq} AND al.target LIKE 'board' AND al.target_seq = b.seq) as action,
		(SELECT al.seq FROM ActionLog al WHERE al.member_seq = #{member_seq} AND al.target LIKE 'board' AND al.target_seq = b.seq) as actionLog_seq,
		(SELECT name FROM WorkGroup wg WHERE wg.seq = b.group_seq) as group_name
		<choose>
			<when test="comment_offset != null and comment_offset != ''">
				, #{comment_offset} as comment_offset
			</when>
			<otherwise>
				,(SELECT IF(COUNT(c2.seq) > #{comment_limit}, COUNT(c2.seq)-#{comment_limit}, 0) FROM Comment c2 WHERE c2.board_seq = b.seq) as comment_offset
			</otherwise>
		</choose>
		FROM WorkBoard b, WorkGroupMember gm
		WHERE b.group_seq = gm.group_seq
		<if test="group_seq != null and group_seq != ''">
			AND b.group_seq = #{group_seq}
		</if>
		AND gm.member_seq = #{member_seq}
		<include refid="selectBoard" />
		ORDER BY b.regdate DESC
		<if test='allyn == "N"'>
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>
	
	<select id="getWorkBoardCount" parameterType="WorkBoard" resultType="int">
		SELECT COUNT(*)
		FROM WorkBoard b, WorkGroupMember gm
		WHERE b.group_seq = gm.group_seq
		AND b.group_seq = #{group_seq}
		AND gm.member_seq = #{member_seq}
		<include refid="selectBoard" />
	</select>
	
	<select id="getWorkBoardOne" parameterType="WorkBoard" resultMap="workBoardMap">
		SELECT *, 'board' as target, 'like' as `like`, 'dislike' as dislike, #{member_seq} as search_member_seq, #{comment_limit} as comment_limit,
		(SELECT c.seq FROM Comment c WHERE c.board_seq = b.seq ORDER BY c.seq ASC LIMIT 1) as first_comment_seq,
		(SELECT action FROM ActionLog al WHERE al.member_seq = #{member_seq} AND al.target LIKE 'board' AND al.target_seq = b.seq) as action,
		(SELECT al.seq FROM ActionLog al WHERE al.member_seq = #{member_seq} AND al.target LIKE 'board' AND al.target_seq = b.seq) as actionLog_seq,
		(SELECT name FROM WorkGroup wg WHERE wg.seq = b.group_seq) as group_name
		<choose>
			<when test="comment_offset != null and comment_offset != ''">
				, #{comment_offset} as comment_offset
			</when>
			<otherwise>
				,(SELECT IF(COUNT(c2.seq) > #{comment_limit}, COUNT(c2.seq)-#{comment_limit}, 0) FROM Comment c2 WHERE c2.board_seq = b.seq) as comment_offset
			</otherwise>
		</choose>
		FROM WorkBoard b
		WHERE b.seq = #{seq}
	</select>
	
	<select id="getWorkBoardFileList" resultType="WorkBoardFile">
		SELECT *
		FROM WorkBoardFile
		WHERE board_seq = #{board_seq}
	</select>
	
	<resultMap type="WorkBoard" id="workBoardMap">
		<result property="seq" column="seq" />
		<result property="member_seq" column="member_seq" />
		<result property="member_id" column="member_id" />
		<result property="member_name" column="member_name" />
		<result property="work_seq" column="work_seq" />
		<result property="group_seq" column="group_seq" />
		<result property="title" column="title" />
		<result property="type" column="type" />
		<result property="startdate" column="startdate" />
		<result property="enddate" column="enddate" />
		<result property="worker" column="worker" />
		<result property="content" column="content" />
		<result property="status" column="status" />
		<result property="register" column="register" />
		<result property="regdate" column="regdate" />
		<result property="target" column="target" />
		<result property="like" column="like" />
		<result property="dislike" column="dislike" />
		<result property="search_member_seq" column="search_member_seq" />
		<result property="comment_offset" column="comment_offset" />
		<result property="comment_limit" column="comment_limit" />
		<collection property="likeList" column="{action=like, target=target, target_seq=seq}" javaType="java.util.ArrayList" ofType="ActionLog" select="getActionLogList"></collection>
		<collection property="dislikeList" column="{action=dislike, target=target, target_seq=seq}" javaType="java.util.ArrayList" ofType="ActionLog" select="getActionLogList"></collection>
		<collection property="workBoardFileList" column="{board_seq=seq}" javaType="java.util.ArrayList" ofType="WorkBoardFile" select="getWorkBoardFileList"></collection>
		<collection property="commentList" column="{board_seq=seq, search_member_seq=search_member_seq, init_offset=comment_offset, limit=comment_limit}" javaType="java.util.ArrayList" ofType="Comment" select="getCommentList"></collection>
		<collection property="boardVoteList" column="{board_seq=seq, search_member_seq=search_member_seq}" javaType="java.util.ArrayList" ofType="BoardVote" select="getBoardVoteList"></collection>
	</resultMap>
	
	<select id="getWorkCategoryList" parameterType="WorkCategory" resultType="WorkCategory">
		SELECT wc.*, 
			(SELECT COUNT(*) 
			FROM WorkCategoryGroup wcg 
			WHERE wcg.category_seq = wc.seq
			AND wcg.group_seq IN (
					SELECT group_seq FROM WorkGroupMember wgm WHERE wgm.member_seq = #{member_seq}
				)
			) as group_count
		FROM WorkCategory wc
		WHERE wc.work_seq = #{work_seq}
		AND
		<if test="member_seq != null and member_seq != ''">
			(wc.seq IN (SELECT category_seq FROM WorkCategoryGroup wcg 
						WHERE wcg.group_seq IN (
							SELECT group_seq FROM WorkGroupMember wgm WHERE wgm.member_seq = #{member_seq}
						)) 
			OR wc.member_seq = #{member_seq})
		</if>
	</select>
	
	<update id="moveWorkGroupList" parameterType="WorkCategoryGroup">
		UPDATE WorkCategoryGroup
		SET category_seq = #{category_seq}
		WHERE member_seq = #{member_seq}
		<if test="groupSeqList != null and groupSeqList != ''">
			AND group_seq IN
			<foreach collection="groupSeqList" item="groupseq" open="(" close=")" separator=" , " index="i">
				#{groupseq}
			</foreach>
		</if>
	</update>
	
	<insert id="insertWorkGroupMemberList" parameterType="WorkGroupMember">
		INSERT INTO WorkGroupMember (
			group_seq,
			member_seq,
			regdate
		) VALUES 
		<if test="memberSeqList != null and memberSeqList != ''">
			<foreach collection="memberSeqList" item="memberseq" open="" close="" separator=" , " index="i">
				(#{group_seq}, #{memberseq}, #{regdate})
			</foreach>
		</if>
		
	</insert>
	
	<select id="getCreatedWorkCode" parameterType="String" resultType="String">
		SELECT getWorkCode(#{title}) as code
	</select>
	
	<select id="getCommentList" resultMap="CommentMap">
		SELECT *, 'comment' as target, 'like' as `like`, 'dislike' as dislike,
		(SELECT action FROM ActionLog al WHERE al.member_seq = #{search_member_seq} AND al.target LIKE 'comment' AND al.target_seq = c.seq) as action,
		(SELECT al.seq FROM ActionLog al WHERE al.member_seq = #{search_member_seq} AND al.target LIKE 'comment' AND al.target_seq = c.seq) as actionLog_seq
		FROM Comment c
		WHERE board_seq = #{board_seq}
		ORDER BY c.regdate ASC
		<choose>
			<when test="offset != null and offset != ''">
				LIMIT #{limit} OFFSET #{offset}
			</when>
			<otherwise>
				LIMIT #{limit} OFFSET #{init_offset}
			</otherwise>
		</choose>
	</select>
	
	<select id="getCommentOne" resultMap="CommentMap">
		SELECT *, 'comment' as target, 'like' as `like`, 'dislike' as dislike,
		(SELECT action FROM ActionLog al WHERE al.member_seq = #{search_member_seq} AND al.target LIKE 'comment' AND al.target_seq = c.seq) as action,
		(SELECT al.seq FROM ActionLog al WHERE al.member_seq = #{search_member_seq} AND al.target LIKE 'comment' AND al.target_seq = c.seq) as actionLog_seq
		FROM Comment c
		WHERE c.seq = #{seq}
	</select>
	
	<select id="getCommentFileList" resultType="CommentFile">
		SELECT *
		FROM CommentFile
		WHERE comment_seq = #{comment_seq}
	</select>
	
	<resultMap type="Comment" id="CommentMap">
		<result property="seq" column="seq" />
		<result property="board_seq" column="board_seq" />
		<result property="member_seq" column="member_seq" />
		<result property="member_id" column="member_id" />
		<result property="member_name" column="member_name" />
		<result property="content" column="content" />
		<result property="register" column="register" />
		<result property="regdate" column="regdate" />
		<result property="modifier" column="modifier" />
		<result property="moddate" column="moddate" />
		<result property="target" column="target" />
		<result property="like" column="like" />
		<result property="dislike" column="dislike" />
		<collection property="likeList" column="{action=like, target=target, target_seq=seq}" javaType="java.util.ArrayList" ofType="ActionLog" select="getActionLogList"></collection>
		<collection property="dislikeList" column="{action=dislike, target=target, target_seq=seq}" javaType="java.util.ArrayList" ofType="ActionLog" select="getActionLogList"></collection>
		<collection property="commentFileList" column="{comment_seq=seq}" javaType="java.util.ArrayList" ofType="CommentFile" select="getCommentFileList"></collection>
	</resultMap>
	
	<select id="getActionLogList" resultType="ActionLog">
		SELECT *
		FROM ActionLog
		WHERE 1 = 1
		<include refid="selectActionLog" />		
	</select>
	
	<select id="getBoardVoteList" resultMap="BoardVoteMap">
		SELECT bv.* ,
			IF((SELECT COUNT(*) FROM BoardVoteMember bvm WHERE bvm.member_seq = #{search_member_seq} AND bvm.vote_seq = bv.seq AND bvm.board_seq = #{board_seq}) > 0 , 'Y', 'N') as voteyn
		FROM BoardVote bv
		WHERE bv.board_seq = #{board_seq}
	</select>
	
	<select id="getBoardVoteMemberList" resultType="BoardVoteMember">
		SELECT *
		FROM BoardVoteMember
		WHERE vote_seq = #{vote_seq}
	</select>
	
	<resultMap type="BoardVote" id="BoardVoteMap">
		<result property="seq" column="seq" /> 
		<collection property="boardVoteMemberList" column="{vote_seq=seq}" javaType="java.util.ArrayList" ofType="BoardVoteMember" select="getBoardVoteMemberList"></collection>
	</resultMap>
	
	<select id="getGroupFileList" parameterType="WorkGroupFile" resultType="Map">
		SELECT *
		FROM 
		(
			SELECT wbf.seq, wbf.board_seq, wbf.name, wbf.object_name, wbf.`size`, wbf.src, wbf.regdate , 'board' as type, wb.member_id, wb.member_name 
			FROM WorkBoard wb, WorkBoardFile wbf 
			WHERE wb.seq = wbf.board_seq 
			AND wb.group_seq = #{group_seq}
			<if test='file_type != null and file_type != ""'>
				<choose>
					<when test='file_type == "image"'>
						AND (
							wbf.name LIKE CONCAT('%', '.png') 
							OR wbf.name LIKE CONCAT('%', '.PNG') 
							OR wbf.name LIKE CONCAT('%', '.JPG') 
							OR wbf.name LIKE CONCAT('%', '.jpg') 
							OR wbf.name LIKE CONCAT('%', '.JPEG') 
							OR wbf.name LIKE CONCAT('%', '.jpeg') 
							OR wbf.name LIKE CONCAT('%', '.GIF') 
							OR wbf.name LIKE CONCAT('%', '.gif') 
						)
					</when>
					<when test='file_type == "ppt"'>
						AND (
							wbf.name LIKE CONCAT('%', '.ppt') 
							OR wbf.name LIKE CONCAT('%', '.PPT') 
							OR wbf.name LIKE CONCAT('%', '.pptx')
							OR wbf.name LIKE CONCAT('%', '.PPTX')
						)
					</when>
					<otherwise>
						AND wbf.name LIKE CONCAT('%', '.', #{file_type})
					</otherwise>
				</choose>
			</if>
			UNION 
			
			SELECT cf.seq, c.board_seq, cf.name, cf.object_name, cf.`size`, cf.src, cf.regdate, 'comment' as type, c.member_id, c.member_name 
			FROM WorkBoard wb, Comment c, CommentFile cf 
			WHERE wb.seq = c.board_seq 
			AND c.seq = cf.comment_seq 
			AND wb.group_seq = #{group_seq}
			<if test='file_type != null and file_type != ""'>
				<choose>
					<when test='file_type == "image"'>
						AND (
								cf.name LIKE CONCAT('%', '.png') 
							OR	cf.name LIKE CONCAT('%', '.PNG') 
							OR	cf.name LIKE CONCAT('%', '.JPG') 
							OR	cf.name LIKE CONCAT('%', '.jpg') 
							OR 	cf.name LIKE CONCAT('%', '.JPEG') 
							OR 	cf.name LIKE CONCAT('%', '.jpeg') 
							OR 	cf.name LIKE CONCAT('%', '.GIF') 
							OR 	cf.name LIKE CONCAT('%', '.gif') 
						)
					</when>
					<when test='file_type == "ppt"'>
						AND (
								cf.name LIKE CONCAT('%', '.ppt') 
							OR 	cf.name LIKE CONCAT('%', '.PPT') 
							OR 	cf.name LIKE CONCAT('%', '.pptx')
							OR 	cf.name LIKE CONCAT('%', '.PPTX')
						)
					</when>
					<otherwise>
						AND wbf.name LIKE CONCAT('%', '.', #{file_type})
					</otherwise>
				</choose>
			</if>
		) a
		ORDER BY a.regdate desc
		LIMIT #{limit} OFFSET #{offset}
	</select>
	
	<select id="getWorkChatMemberListMapper" parameterType="WorkChatMember" resultType="WorkChatMember">
		SELECT wcm.*, 
			(SELECT message FROM WorkChatLog wcl WHERE wcl.chat_seq = wcm.chat_seq ORDER BY wcl.regdate DESC LIMIT 1) as last_msg,
			(SELECT wcl.src FROM WorkChatLog wcl WHERE wcl.chat_seq = wcm.chat_seq ORDER BY wcl.regdate DESC LIMIT 1) as last_src,
			(SELECT wcl.regdate FROM WorkChatLog wcl WHERE wcl.chat_seq = wcm.chat_seq ORDER BY wcl.regdate DESC LIMIT 1) as last_date,
			(SELECT COUNT(*) FROM WorkChatLog wcl WHERE wcl.chat_seq = wcm.chat_seq AND wcl.member_seq != #{member_seq} AND wcl.confirmyn = 'N') as no_confirm_count
		FROM WorkChatMember wcm
		WHERE wcm.member_seq = #{member_seq}
		AND wcm.work_seq = #{work_seq}
		<if test="seq != null and seq != ''">
			AND wcm.seq = #{seq}
		</if>
		<if test="chat_seq != null and chat_seq != ''">
			AND wcm.chat_seq = #{chat_seq}
		</if>
		ORDER BY last_date DESC
	</select>
	
	<select id="getWorkChatLogListMapper" parameterType="WorkChatLog" resultType="WorkChatLog">
		SELECT IF(wcl.seq = (SELECT MIN(wcl2.seq) FROM WorkChatLog wcl2 WHERE wcl2.chat_seq = wcl.chat_seq AND wcl2.regdate &gt;= DATE_FORMAT(wcl.regdate, '%Y-%m-%d')), 'Y', 'N') as firstyn
			,wcl.*
		FROM WorkChatLog wcl 
		WHERE chat_seq = #{chat_seq}
		<if test="seq != null and seq != ''">
			AND wcl.seq = #{seq}
		</if>
		ORDER BY wcl.regdate desc, wcl.seq desc
		LIMIT #{limit} OFFSET #{offset}
	</select>
	
	<select id="getWorkChatLogOneMapper" parameterType="WorkChatLog" resultType="WorkChatLog">
		SELECT IF(wcl.seq = (SELECT MIN(wcl2.seq) FROM WorkChatLog wcl2 WHERE wcl2.chat_seq = wcl.chat_seq AND wcl2.regdate &gt;= DATE_FORMAT(wcl.regdate, '%Y-%m-%d')), 'Y', 'N') as firstyn
			,wcl.*
		FROM WorkChatLog wcl 
		WHERE wcl.seq = #{seq}
	</select>
	
</mapper>